name: Frontend Deployment

on:
  push:
    branches:
      - main
      - feature/deploy-actions
    # paths:
    #   - 'js/*'    # Only .js files



env:
    ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}  # Replace with your IAM role ARN
    AWS_REGION: ${{ vars.AWS_REGION }}  # Replace with your AWS region
    ECR_REPO_URL: "dev-ngnix-indimitra-ecr"  # Replace with your ECR repository URL
    TF_VAR_password: ${{ secrets.TF_VAR_PASSWORD }}  # Replace with your IAM role ARN
jobs:
  build:
    environment: dev
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies and build
        run: |
          cd js
          npm install
          npm run build
 
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ./js/build



  deploy:
    environment: dev
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::${{ env.ACCOUNT_ID }}:role/terraform-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: ./js/build   

      - name: Set image tag
        run: echo "IMAGE_TAG=v$(date -u +'%b-%d-%Y-%Hhr-%Mmin')" >> $GITHUB_ENV

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Image to ECR
        id: build-image
        run: |

          docker build -t ${{ env.ECR_REPO_URL }}:${{ env.IMAGE_TAG }} -f ./nginx/Dockerfile .
          docker tag ${{ env.ECR_REPO_URL }}:${{ env.IMAGE_TAG }} ${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_URL }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_URL }}:${{ env.IMAGE_TAG }}

  update_ecs:
    environment: dev
    runs-on: ubuntu-latest
    needs: deploy
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::${{ env.ACCOUNT_ID }}:role/terraform-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: terraform apply
        run: |
          cd ./terraform/environments/dev
          terraform init 
          terraform apply -auto-approve -var="image_tag=${{ env.IMAGE_TAG }}" -var="ecr_nginx=${{ env.ECR_REPO_URL }}" -var="TF_VAR_password=${{ env.TF_VAR_password }}" -var="region=${{ env.AWS_REGION }}"


        

