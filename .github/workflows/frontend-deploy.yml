name: Frontend Deployment

on:
  push:
    branches:
      - main
      - feature/deploy-actions
    # paths:
    #   - 'js/*'    # Only .js files



env:
    ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}  # Replace with your IAM role ARN
    AWS_REGION: ${{ vars.AWS_REGION }}  # Replace with your AWS region

jobs:
  build:
    environment: dev
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd js
          npm install

      - name: Build frontend
        run: |
          cd js
          npm run build
  deploy:
    environment: dev
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::${{ env.ACCOUNT_ID }}:role/terraform-deploy
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Image to ECR
        id: build-image
        run: |
          docker build -t dev-ngnix-indimitra-ecr -f ./nginx/Dockerfile .
          # docker tag dev-ngnix-indimitra-ecr:latest ${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/dev-ngnix-indimitra-ecr:latest
          # docker push ${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/dev-ngnix-indimitra-ecr:latest



