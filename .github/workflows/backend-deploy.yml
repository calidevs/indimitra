name: Backend Deployment

on:
  push:
    branches:
      
      - feature/deploy-actions
    # paths:
    #   - 'python/*'


env:
    ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}  
    AWS_REGION: ${{ vars.AWS_REGION }}  # Replace with your AWS region
    ECR_REPO_URL: "dev-ngnix-indimitra-ecr"  # Replace with your ECR repository URL
    TF_VAR_password: ${{ secrets.TF_VAR_PASSWORD }}  

permissions:
  id-token: write
  contents: read
jobs:
  build:
    environment: dev
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set-image-tag.outputs.IMAGE_TAG }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::${{ env.ACCOUNT_ID }}:role/terraform-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Set image tag
        id: set-image-tag
        run: echo "IMAGE_TAG=v$(date -u +'%b-%d-%Y-%Hhr-%Mmin')" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          cd ./python
          docker build -t ${{ env.ECR_REPO_URL }}:${{ env.IMAGE_TAG }} .
          docker tag ${{ env.ECR_REPO_URL }}:${{ env.IMAGE_TAG }} ${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_URL }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_URL }}:${{ env.IMAGE_TAG }}

  update_ecs:
      uses: ./.github/workflows/update-ecs-task.yml
      with:
        image_tag: ${{ needs.deploy.outputs.image_tag }} 
      secrets: inherit