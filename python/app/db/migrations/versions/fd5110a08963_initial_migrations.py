"""initial_migrations

Revision ID: fd5110a08963
Revises: 
Create Date: 2025-07-09 20:10:17.334706

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fd5110a08963'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('CASH', name='paymenttype'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_id'), 'payment', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('mobile', sa.String(), nullable=False),
    sa.Column('secondary_phone', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('type', sa.Enum('ADMIN', 'USER', 'DELIVERY', 'STORE_MANAGER', name='usertype'), nullable=False),
    sa.Column('referredBy', sa.Integer(), nullable=True),
    sa.Column('referralId', sa.String(), nullable=False),
    sa.Column('cognitoId', sa.String(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['referredBy'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cognitoId'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('mobile')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('isPrimary', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_address_id'), 'address', ['id'], unique=False)
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('categoryId', sa.Integer(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['categoryId'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.create_table('store',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('radius', sa.Float(), nullable=True),
    sa.Column('managerUserId', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('mobile', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('disabled', sa.Boolean(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('pincodes', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('tnc', sa.String(), nullable=True),
    sa.Column('storeDeliveryFee', sa.Float(), nullable=True),
    sa.Column('taxPercentage', sa.Float(), nullable=True),
    sa.Column('section_headers', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('display_field', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['managerUserId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('display_field'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('mobile')
    )
    op.create_index(op.f('ix_store_id'), 'store', ['id'], unique=False)
    op.create_table('fees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('fee_rate', sa.Float(), nullable=False),
    sa.Column('fee_currency', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('DELIVERY', 'PICKUP', name='feetype'), nullable=False),
    sa.Column('limit', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['store_id'], ['store.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_fees_id'), 'fees', ['id'], unique=False)
    op.create_table('inventory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('storeId', sa.Integer(), nullable=False),
    sa.Column('productId', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('measurement', sa.Integer(), nullable=True),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('is_listed', sa.Boolean(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['productId'], ['products.id'], ),
    sa.ForeignKeyConstraint(['storeId'], ['store.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inventory_id'), 'inventory', ['id'], unique=False)
    op.create_table('pickup_addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['store.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pickup_addresses_id'), 'pickup_addresses', ['id'], unique=False)
    op.create_table('store_driver',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('storeId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['storeId'], ['store.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('userId', 'storeId', name='unique_store_driver')
    )
    op.create_index(op.f('ix_store_driver_id'), 'store_driver', ['id'], unique=False)
    op.create_table('store_location_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['store.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_store_location_codes_id'), 'store_location_codes', ['id'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('createdByUserId', sa.Integer(), nullable=False),
    sa.Column('addressId', sa.Integer(), nullable=True),
    sa.Column('pickupId', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('DELIVERY', 'PICKUP', name='feetype'), nullable=True),
    sa.Column('storeId', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ORDER_PLACED', 'ACCEPTED', 'CANCELLED', 'READY_FOR_DELIVERY', 'SCHEDULED', 'PICKED_UP', 'DELIVERED', name='orderstatus'), nullable=False),
    sa.Column('paymentId', sa.Integer(), nullable=True),
    sa.Column('totalAmount', sa.Float(), nullable=False),
    sa.Column('deliveryDate', sa.DateTime(), nullable=True),
    sa.Column('deliveryInstructions', sa.String(), nullable=True),
    sa.Column('bill_url', sa.String(), nullable=True),
    sa.Column('deliveryFee', sa.Float(), nullable=True),
    sa.Column('tipAmount', sa.Float(), nullable=True),
    sa.Column('orderTotalAmount', sa.Float(), nullable=False),
    sa.Column('taxAmount', sa.Float(), nullable=True),
    sa.Column('display_code', sa.String(), nullable=True),
    sa.Column('custom_order', sa.String(), nullable=True),
    sa.Column('cancelMessage', sa.String(), nullable=True),
    sa.Column('cancelledByUserId', sa.Integer(), nullable=True),
    sa.Column('cancelledAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['addressId'], ['address.id'], ),
    sa.ForeignKeyConstraint(['cancelledByUserId'], ['users.id'], ),
    sa.ForeignKeyConstraint(['createdByUserId'], ['users.id'], ),
    sa.ForeignKeyConstraint(['paymentId'], ['payment.id'], ),
    sa.ForeignKeyConstraint(['pickupId'], ['pickup_addresses.id'], ),
    sa.ForeignKeyConstraint(['storeId'], ['store.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.create_table('delivery',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('orderId', sa.Integer(), nullable=False),
    sa.Column('driverId', sa.Integer(), nullable=True),
    sa.Column('pickedUpTime', sa.DateTime(), nullable=True),
    sa.Column('deliveredTime', sa.DateTime(), nullable=True),
    sa.Column('photo', sa.String(), nullable=True),
    sa.Column('comments', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['driverId'], ['users.id'], ),
    sa.ForeignKeyConstraint(['orderId'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_delivery_id'), 'delivery', ['id'], unique=False)
    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('productId', sa.Integer(), nullable=False),
    sa.Column('inventoryId', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('orderId', sa.Integer(), nullable=False),
    sa.Column('orderAmount', sa.Float(), nullable=False),
    sa.Column('updatedOrderitemsId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['inventoryId'], ['inventory.id'], ),
    sa.ForeignKeyConstraint(['orderId'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['productId'], ['products.id'], ),
    sa.ForeignKeyConstraint(['updatedOrderitemsId'], ['order_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_items_id'), 'order_items', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_order_items_id'), table_name='order_items')
    op.drop_table('order_items')
    op.drop_index(op.f('ix_delivery_id'), table_name='delivery')
    op.drop_table('delivery')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_store_location_codes_id'), table_name='store_location_codes')
    op.drop_table('store_location_codes')
    op.drop_index(op.f('ix_store_driver_id'), table_name='store_driver')
    op.drop_table('store_driver')
    op.drop_index(op.f('ix_pickup_addresses_id'), table_name='pickup_addresses')
    op.drop_table('pickup_addresses')
    op.drop_index(op.f('ix_inventory_id'), table_name='inventory')
    op.drop_table('inventory')
    op.drop_index(op.f('ix_fees_id'), table_name='fees')
    op.drop_table('fees')
    op.drop_index(op.f('ix_store_id'), table_name='store')
    op.drop_table('store')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_address_id'), table_name='address')
    op.drop_table('address')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_payment_id'), table_name='payment')
    op.drop_table('payment')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
